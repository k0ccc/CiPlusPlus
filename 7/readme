Цель: Понять, как использовать указатели для передачи данных в функции таким образом, чтобы функция могла изменить исходную переменную.
Объяснение:

    По умолчанию в C++ аргументы в функции передаются по значению (pass-by-value). Это значит, что функция получает копию переменной, и любые изменения копии внутри функции не влияют на оригинал снаружи.
    Передавая в функцию указатель на переменную, мы передаем ей адрес оригинала. Функция, имея адрес, может через оператор разыменования (*) получить доступ к оригинальной переменной и изменить ее.

Задание:

    Создайте в main переменную int counter = 0;.
    Напишите функцию void addValue(int* ptrNum, int valueToAdd), которая:
        Принимает указатель на int (ptrNum) и целое число valueToAdd.
        Внутри функции прибавляет valueToAdd к значению, на которое указывает ptrNum (используйте оператор *).
    Вызовите функцию addValue из main, передав ей адрес переменной counter (&counter) и какое-нибудь значение (например, 5).
    После вызова функции выведите значение counter на консоль, чтобы убедиться, что оно изменилось (должно стать 5).
    Вызовите addValue еще раз с тем же адресом и другим значением (например, 10).
    Снова выведите counter (должно стать 15).