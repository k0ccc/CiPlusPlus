Цель: Создать простейший класс с данными (членами) и действиями (методами). Познакомиться с public и private.
Объяснение:

    class: Ключевое слово для определения класса. За ним идет имя класса, а потом тело в {} с точкой с запятой ; в конце.
    Члены класса (Data Members): Переменные, объявленные внутри класса. Они хранят состояние объекта.
    Методы класса (Member Functions): Функции, объявленные внутри класса. Они определяют поведение объекта.
    public: и private: (Спецификаторы доступа):
        public:: Члены и методы, объявленные после public:, доступны для вызова извне класса (например, из main). Это интерфейс класса.
        private:: Члены и методы, объявленные после private:, доступны только изнутри методов самого класса. Это используется для сокрытия деталей реализации (инкапсуляция). По умолчанию все члены класса private, если не указано иное.
    Создание объекта: ИмяКласса имяОбъекта; (например, Counter c;).
    Доступ к членам/методам: Через оператор . (точка): имяОбъекта.имяМетода(); или имяОбъекта.публичныйЧлен.
    const после метода: Если метод объявлен как void print() const;, это означает, что данный метод обещает не изменять состояние объекта (его переменные-члены). Это хорошая практика для методов-"геттеров" или методов, которые только читают данные объекта.

Задание:

    Создайте класс Counter.
    В секции private: объявите член-переменную int count_ = 0; (приватное поле для хранения счета; _ в конце имени - частое соглашение для приватных членов).
    В секции public: объявите три метода:
        void increment(): Увеличивает count_ на 1.
        void reset(): Сбрасывает count_ в 0.
        int getValue() const: Возвращает текущее значение count_. Обратите внимание на const.
    В main создайте объект класса Counter: Counter myCounter;.
    Вызовите метод increment() несколько раз.
    Вызовите метод getValue() и выведите результат на консоль.
    Вызовите метод reset().
    Снова вызовите getValue() и выведите результат.